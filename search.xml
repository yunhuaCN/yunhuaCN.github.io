<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HTML第一章-2</title>
      <link href="/2023/04/14/html-di-yi-zhang-2/"/>
      <url>/2023/04/14/html-di-yi-zhang-2/</url>
      
        <content type="html"><![CDATA[<p>着重来说明一下标准元数据</p><ol><li><p>Keywords (关键字)<br> 说明：告诉搜索引擎你网页的关键字是什么。<br> 用法：<Meta name="Keywords" Content="网络营销，网站推广，网站建设，搜索引擎优化"></p></li><li><p>Description (网页描述)<br> 说明：Description用来告诉搜索引擎你的网页主要内容。<br> 用法：<meta name="description" content="网站开发、网站优化、网站推广和网络营销交流学习中心" /></p></li><li><p>Robots (机器人向导)<br> 说明：Robots用来告诉搜索机器人哪些页面需要索引，哪些页面不需要索引。Content的参数有all、none、index、noindex、follow、nofollow。默认是all。<br> 用法：<Meta name="Robots" Content="All|None|Index|Noindex|Follow|Nofollow"><br> all：文件将被检索，且页面上的链接可以被查询；<br> none：文件将不被检索，且页面上的链接不可以被查询；(和 “noindex, no follow” 起相同作用)<br> index：文件将被检索；（让robot&#x2F;spider登录）<br> follow：页面上的链接可以被查询；<br> noindex：文件将不被检索，但页面上的链接可以被查询；(不让robot&#x2F;spider登录)<br> nofollow：文件将不被检索，页面上的链接可以被查询。(不让robot&#x2F;spider顺着此页的连接往下探找) </p></li><li><p>Author (作者)<br> 说明：标注网页的作者或制作组<br> 　　用法：<Meta name="Author" Content="豆苗，doumiao@live.cn"><br> 　　注意：Content可以是：你或你的制作组的名字,或Email</p></li><li><p>Copyright (版权)<br> 说明：标注版权<br> 　　用法：<Meta name="Copyright" Content="本页版权归豆苗网所有"></p></li><li><p>Generator (编辑器)<br> 说明：编辑器的说明<br> 　　用法：<Meta name="Generator" Content="PCDATA|FrontPage|"><br> 　　注意：Content&#x3D;”你所用编辑器”</p></li><li><p>revisit-after (重访)</p></li><li><p>HTML规范中定义的标准名称application-name 网页中所运行的应用名称。（注意不同于<title>标签）<br> author： 文档作者的名字<br> description：对页面内容的描述，一些浏览器将其作为书签的默认描述。<br> generator： 生成此页面的软件的标识符<br> keywords： 与页面内容相关的关键词，使用逗号分割。<br> referrer： 控制由当前文档发出的请求的HTTP Referer请求头<br> referrer的可选值<br> no-referrer： 不发送HTTP Referer请求头<br> origin： 只发送当前文档的origin<br> no-referrer-when-downgrade:<br> 如果请求目标比当前页面一样安全或更加安全，则发送完整URL<br> 如果目标页面比当前页面更加不安全，则不发送referrer【这是默认行为】<br> origin-when-cross-origin：对同源请求发送完整URL（不含参数），其他情况只发送origin<br> same-origin： 对同源请求发送完整URL（不含参数），其他情况，不发送referrer请求头<br> strict-origin：<br> 如果请求目标与当前页面一样或更加安全，发送 origin<br> 如果请求目标不如当前页面安全，不发送referrer<br> strict-origin-when-cross-origin：对同源请求发送完整URL（不含参数）<br> 其他情况<br> 如果请求目标与当前页面一样或更加安全，发送origin<br> 如果请求目标不如当前页面安全，则不发送referrer<br> unsafe-URL：对同源请求和跨源请求发送完整URL（不含参数）</p></li><li><p>CSS颜色调整规范中定义的标准名称<br> color-scheme ： 指定与当前文档兼容的配色方案，它的可选值有：<br> normal：未指定配色方案，应当仅使用默认配色方案进行渲染<br> [light | dark]+：文档支持的一种或多种配色方案，优先第一种。<br> only light：仅支持浅色模式（浅色背景，深色前景）</p></li><li><p>CSS设备适配规范定义的标准名称<br>viewport<br>viewport：为视口的初始大小提供指示，目前仅用于移动设备，其可选的值有：<br>width：定义视口的宽度，可能的值：<br>一个正整数。（此时单位为像素）<br>一个字符串。（带单位的CSS宽度值）<br>device-width 表示与设备宽度一致<br>height： 定义viewport的高度，未被任浏览器使用，不介绍值了<br>initial-scale：定义设备宽度（与横竖屏相关）与视口大小之间的比例<br>是一个0.0-10.0之间的【正数】；<br>maximum-scale： 定义缩放的最大值，必须大于等于minimum-scale<br>是一个0.0-10.0之间的【正数】；<br>minimum-scale：定义缩放的最小值，必须小于等于maximum-scale<br>是一个0.0-10.0之间的【正数】；<br>user-scalable：用户是否可以缩放当前页面<br>yes 或 no ，默认为yes<br>viewport-fit ： 视口是否根据设备自适应，可能的值<br>auto：不会影响“初始布局”视口，整个网页都是可查看的<br>caontain：视口被缩放以适合显示中内接的最大矩形<br>cover： 缩放视口以填充设备显示。<br>将 user-scalable 设置为 no 会阻止一切意义上的缩放，视力不好的人可能会因此无法阅读和理解页面内容</p></li><li><p>其它元数据名称<br>creator：当前文档的创建者，例如某个组织或者机构。如果有不止一个创建者，则应当使用多个名称为 creator 的 <meta> 元素<br>googolbot：robots 的替代名称，只被 Googlebot（Google 的网页爬虫&#x2F;索引搜寻器）使用<br>publisher：当前文档的发布者&#x2F;出版者<br>robots：爬虫应当遵守的规则。是一个使用逗号分隔的、由下列值构成的列表：<br>index：允许爬虫索引此页面（所有爬虫）<br>noindex：要求爬虫不索引此页面（所有爬虫）<br>follow ：允许爬虫跟踪页面上链接所指向的页面（所有爬虫）<br>onfollow：要求爬虫不跟踪页面上的链接（所有爬虫）<br>all：与index,follow 等价（只针对谷歌爬虫）<br>none：与noindex, nofollow等价（只针对谷歌爬虫）<br>noarchive：要求搜索引擎不缓存页面内容（针对谷歌、雅虎、必应搜索）<br>nosnippet：要求搜索引擎不要在搜索结果页显示本页面的描述。（针对谷歌、必应搜索）<br>noimageindex：要求本页面不会成为搜索结果页中索引图像的引用页。（只针对谷歌搜索）<br>nocache：noarchive的替代名称。（只针对必应）</p></li></ol><h5 id="3-http-equiv属性，content属性"><a href="#3-http-equiv属性，content属性" class="headerlink" title="3.http-equiv属性，content属性"></a>3.http-equiv属性，content属性</h5><p>http-equiv 属性用来覆盖 HTTP 回应的头信息字段，content 属性是该字段的内容。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Security-Policy<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>default-src 'self'<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上面代码可以覆盖 HTTP 回应的 Content-Security-Policy 字段。</p><h4 id="lt-title-gt-标签"><a href="#lt-title-gt-标签" class="headerlink" title="&lt;title&gt; 标签"></a><code>&lt;title&gt;</code> 标签</h4><p>此标签用于指定页面的标题，会显示在浏览器窗口的标题栏</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>网页标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>搜索引擎根据它排序</p><p>这个标签的内部不能放置其他标签，只能放置无格式的纯文本</p><h4 id="lt-body-gt-标签"><a href="#lt-body-gt-标签" class="headerlink" title="&lt;body&gt; 标签"></a><code>&lt;body&gt;</code> 标签</h4><p><code>&lt;body&gt;</code> 标签是一个容器标签，用于放置网页的主体内容。浏览器显示的页面内容，都是放置在它的内部。它是<code>&lt;html&gt;</code> 的第二个子元素，紧跟在<code>&lt;head&gt;</code> 后面</p><h2 id="1-4空格和换行"><a href="#1-4空格和换行" class="headerlink" title="1.4空格和换行"></a>1.4空格和换行</h2><p>heml里的多个空格和换行最后只会被合并为一个</p><h2 id="1-5注释"><a href="#1-5注释" class="headerlink" title="1.5注释"></a>1.5注释</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 这是一个注释 --></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者是</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--&lt;p>HelloWorld!&lt;/p>--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML第一章-1</title>
      <link href="/2023/04/14/html-di-yi-zhang-1/"/>
      <url>/2023/04/14/html-di-yi-zhang-1/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h1 id="1-HTML简介"><a href="#1-HTML简介" class="headerlink" title="1.HTML简介"></a>1.HTML简介</h1><h2 id="1-1概述"><a href="#1-1概述" class="headerlink" title="1.1概述"></a>1.1概述</h2><p>浏览器的网页开发涉及3种技术：HTML、CSS、JavaScript</p><ul><li>HTML：定义网页的结构和内容</li><li>CSS：定义网页的样式</li><li>JavaScript：定义网页与用户的互动行为</li></ul><p>基础网页的HTML源码</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;!DOCTYPE html&gt;&lt;html lang&#x3D;&quot;en&quot;&gt;  &lt;head&gt;    &lt;meta charset&#x3D;&quot;UTF-8&quot; &#x2F;&gt;    &lt;title&gt;网页标题&lt;&#x2F;title&gt;  &lt;&#x2F;head&gt;  &lt;body&gt;    &lt;p&gt;Hello World&lt;&#x2F;p&gt;  &lt;&#x2F;body&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-2网页的基本概念"><a href="#1-2网页的基本概念" class="headerlink" title="1.2网页的基本概念"></a>1.2网页的基本概念</h2><h3 id="1-2-1标签"><a href="#1-2-1标签" class="headerlink" title="1.2.1标签"></a>1.2.1标签</h3><p>HTML代码由许多的不同标签（tag）组成</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>网页标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>        HelloWorld!    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上面的就是一些标签，有的标签是成对出现的，例如<code>&lt;title&gt;&lt;/title&gt;</code> <code>&lt;div&gt;&lt;/div&gt;</code>，但有的只出现一个例如说<code>&lt;meta = ……&gt;</code> 因为这只需要一个标签就可以完成功能。</p><p><strong>值得一提的是，在html中可以将代码写到一行里，且对大小写不敏感</strong></p><p>所以有时候在发布网页之前开发者会把源码压缩成一行，以减少传输的字节数。网页内容的缩进和换行主要靠<code>CSS</code> 样式来实现</p><h3 id="1-2-2元素"><a href="#1-2-2元素" class="headerlink" title="1.2.2元素"></a>1.2.2元素</h3><p>浏览器渲染网页的时候，会把html源码解析成一个标签树，每个标签都是一个节点（node），成为网页元素（element）。</p><p>所以标签和元素基本上是同义词，只是使用的场合不一样，标签是源码角度来看，元素是编程角度来看，例如<code>&lt;p&gt;</code> 标签对应网页的<code>p</code>元素。</p><p>而嵌套的标签就构成了网页元素的层级关系</p><p>元素分类:</p><ul><li><p>块级元素（block）</p></li><li><p>行内元素（inline）</p><p>  其中块级元素默认占据一个独立的区域，在网页上会自动另起一行，占据100%的宽度</p></li></ul><h3 id="1-2-3属性"><a href="#1-2-3属性" class="headerlink" title="1.2.3属性"></a>1.2.3属性</h3><p>属性（attribute）是<code>标签</code> 的额外信息，使用空格与标签名和其他属性分隔</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1000<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>&lt;img&gt;</code> 标签有两个属性：src、width</p><h2 id="1-3网页的基本标签"><a href="#1-3网页的基本标签" class="headerlink" title="1.3网页的基本标签"></a>1.3网页的基本标签</h2><p>主要标签：<code>&lt;!doctype&gt;</code> 此标签标示文档类类型，告诉浏览器如何解析万个亿</p><p>常用**<!DOCTYPE html>**</p><h4 id="lt-html-gt-标签"><a href="#lt-html-gt-标签" class="headerlink" title="&lt;html&gt;标签"></a><code>&lt;html&gt;</code>标签</h4><p><code>&lt;html&gt;</code> 标签是网页的顶层容器，也称为根元素（root element），其他元素都是它的子元素。一个网页只能有一个<code>&lt;html&gt;</code> 标签</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>上述代码表示网页内容默认为英语</p><h4 id="lt-head-gt-标签"><a href="#lt-head-gt-标签" class="headerlink" title="&lt;head&gt; 标签"></a><code>&lt;head&gt;</code> 标签</h4><head>标签是一个容器标签用于放置网页的元信息。它的内容不会出现在网页上，而是为网页渲染做准备<p>head是<html>的第一个子元素，如何网页不包含<head>，浏览器会自动创建一个</p><p>head的子元素一般有七个</p><table><thead><tr><th>名称</th><th>作用</th></tr></thead><tbody><tr><td><code>&lt;meta&gt;</code></td><td>设置网页的元数据</td></tr><tr><td><code>&lt;link&gt;</code></td><td>链接外部样式表</td></tr><tr><td><code>&lt;title&gt;</code></td><td>设置网页标题</td></tr><tr><td><code>&lt;style&gt;</code></td><td>放置内嵌的样式表</td></tr><tr><td><code>&lt;script&gt;</code></td><td>引入脚本</td></tr><tr><td><code>&lt;noscript&gt;</code></td><td>浏览器不支持脚本时，所要显示的内容</td></tr><tr><td><code>&lt;base&gt;</code></td><td>设置网页内部相对URL的计算基准</td></tr></tbody></table><h4 id="lt-meta-gt-标签"><a href="#lt-meta-gt-标签" class="headerlink" title="&lt;meta&gt; 标签"></a><code>&lt;meta&gt;</code> 标签</h4><p>此标签用于设置或说明网页的元数据 ，必须放到<code>&lt;head&gt;</code> 里面，一个<code>&lt;meta&gt;</code> 标签就是一项元数据，网页可以有多个<code>&lt;meta&gt;</code></p><p>一般来说网页应该有两个meta标签，放到head标签最前面</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="1-charset属性"><a href="#1-charset属性" class="headerlink" title="1.charset属性"></a>1.charset属性</h5><p>charset属性用于指定网页的编码方式</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上述代码声明网页为utf-8编码，虽然可以使用其他编码方式，但主要应该使用utf-8编码、</p><h5 id="2-name属性，content属性"><a href="#2-name属性，content属性" class="headerlink" title="2.name属性，content属性"></a>2.name属性，content属性</h5><p>name属性表示元数据的名字，content属性表示元数据的值</p><p>例如</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>HTML 语言入门<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>HTML,教程<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>张三<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面代码包含了三个元数据：</p><ul><li>description：网页内容的描述</li><li>keywords：网页内容的关键字</li><li>auther：网页作者</li></ul><p>meta标签是一个辅助性的标签，在网页上<strong>不可见</strong></p><p>name标签是描述网页的，以便于搜索机器人（搜索引擎）进行查找、分类，目前几乎所有的搜索引擎都使用网上机器人自动查找meta值来给网页分类</p><p>这里要详细讲一下，name属性分类两种</p><ul><li>标准元数据</li><li>用户自定义内容</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主页</title>
      <link href="/2023/04/10/zhu-ye/"/>
      <url>/2023/04/10/zhu-ye/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/04/10/hello-world/"/>
      <url>/2023/04/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
